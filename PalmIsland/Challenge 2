#pragma config(StandardModel, "RVW Mammalbot")
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*+++++++++++++++++++++++++++++++++++++++++++++| Notes |++++++++++++++++++++++++++++++++++++++++++++++
Mission 2 - Moving Forward and Turning
- This program will cause the robot to drive forward and turn right toward Starting Point 3.
- Your robot will wait for 2 seconds before beginning, move forward at half power for 4 rotations
	of the right encoder (a sensor that detects how much your wheels have spun), turn right for 1/4 of a
	rotation of the right encoder and then stop.
*	Please note that the values in this program were written for Mammalbot using a high-end computer.
	You may need to adjust the values in this program for your computer.

Robot Model: Mammalbot

[I/O Port]          [Name]              [Type]               [Description]
Motor Port B        rightMotor          Motor w/ Encoder     Right side motor
Motor Port C        leftMotor           Motor w/ Encoder     Left side motor
Sensor Port 1				touch								Touch 							 Front robot bumper
Sensor Port 4 			sonar								Sonar 							 Front robot sensor
Sensor Port 3 			light								Color Sensor  			 Bottom Facing Color Sensor
----------------------------------------------------------------------------------------------------*/
//drive forward and make right turn
//Ana Sapp, Buggy Bot, Challenge 2
task main()
{


	//Reset Motor Encoders
	nMotorEncoder[leftMotor] = 0;
	nMotorEncoder[rightMotor] = 0;

	//Move forward at half speed, for 46. rotations of the right encoder, and stop
	while(nMotorEncoder[rightMotor] < 1662)
	{
		motor[leftMotor] = 50;
		motor[rightMotor] = 50;
	}

	//Stop
	motor[leftMotor] = 0;
	motor[rightMotor] = 0;

	//Wait for 1 second before turning
	wait1Msec(1000);

	//Reset Motor Encoders
	nMotorEncoder[leftMotor] = 0;
	nMotorEncoder[rightMotor] = 0;

	//Point turn to the right at half speed, for 90 encoder counts, and stop
	while(nMotorEncoder[leftMotor] < 145)
	{
		motor[rightMotor] = -50;
		motor[leftMotor] = 50;
	}

	//stop
	motor[rightMotor] = 0;
	motor[leftMotor] = 0;


	//Reset Motor Encoders
	nMotorEncoder[leftMotor] = 0;
	nMotorEncoder[rightMotor] = 0;

	//Move forward at half speed, for 46 rotations of the right encoder, and stop
	while(nMotorEncoder[rightMotor] < 5441)
	{
		motor[leftMotor] = 50;
		motor[rightMotor] = 50;
	}

	//Stop
	motor[leftMotor] = 0;
	motor[rightMotor] = 0;



}
